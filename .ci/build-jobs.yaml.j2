image: alpine:latest
stages:
  - build
  - hardware tests

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "parent_pipeline"

{% if archs|length == 0 %}
# Needed because gitlab fails if no jobs are ran:
#  - https://gitlab.com/gitlab-org/gitlab/-/issues/368248
# This applies to `when: manual` is used on all jobs.
placeholder:
  stage: build
  script:
    - 'true'
{% endif %}

.build:
  # Create jobs, but don't run them unless this is
  # overriden in jobs that extend it
  when: manual
  stage: build
  interruptible: true
  before_script:
    # upgrade is mostly needed for "qemu" runners that run edge based on a VM
    # The other build jobs run natively in docker on latest alpine stable and
    # those should always have whatever we need
    - apk upgrade -U
    - .ci/lib/gitlab_prepare_ci.sh
  after_script:
    - cp -r /home/pmos/.local/var/pmbootstrap/packages/ packages/ || true
    - mkdir -p keys
    - cp /home/pmos/.local/var/pmbootstrap/config_apk_keys/pmos@local*.pub keys/ || true
    - .ci/lib/move_logs.sh $CI_PROJECT_DIR
  artifacts:
    expire_in: 1 week
    paths:
      - packages/
      - keys/
  timeout: 10 h

build-x86_64:
{% if ('x86_64' in archs) %}
  when: always
{% endif %}
  extends: .build
  script:
    - .ci/build-x86_64.sh

build-x86:
{% if ('x86' in archs) %}
  when: always
{% endif %}
  extends: .build
  script:
    - .ci/build-x86.sh

build-aarch64:
{% if ('aarch64' in archs) %}
  when: always
{% endif %}
  extends: .build
  tags: [arm64]
  script:
    - .ci/build-aarch64.sh

build-armv7:
{% if ('armv7' in archs) %}
  when: always
{% endif %}
  extends: .build
  tags: [qemu]
  script:
    - .ci/build-armv7.sh

build-armhf:
{% if ('armhf' in archs) %}
  when: always
{% endif %}
  extends: .build
  tags: [qemu]
  script:
    - .ci/build-armhf.sh

build-riscv64:
{% if ('riscv64' in archs) %}
  when: always
{% endif %}
  extends: .build
  tags: [qemu]
  script:
    - .ci/build-riscv64.sh

# Hardware testing

variables:
  # TODO: Switch to postmarketOS/ci-common when the MR has landed
  CI_TRON_TEMPLATE_PROJECT: &ci-tron-template-project mupuf/ci-common
  CI_TRON_JOB_TEMPLATE_PROJECT_URL: $CI_SERVER_URL/$CI_TRON_TEMPLATE_PROJECT
  CI_TRON_JOB_TEMPLATE_COMMIT: &ci-tron-template-commit ci-tron-integration

include:
  - project: *ci-tron-template-project
    ref: *ci-tron-template-commit
    file: '/ci-tron/common.yml'

.ci-tron-device-boot-flow-separate-artifacts:
  variables:
    CI_TRON_KERNEL__URL: "glartifact://${CI_TRON__PMB_BUILD_JOB}/${CI_TRON__PMB_EXPORT_PATH}/${KERNEL_NAME}"
    CI_TRON_INITRAMFS__INITRAMFS__URL: "glartifact://${CI_TRON__PMB_BUILD_JOB}/${CI_TRON__PMB_EXPORT_PATH}/initramfs"

# NOTE: For fastboot devices, we will need to use something
# .ci-tron-device-boot-flow-fastboot-image:
#   variables:
#     CI_TRON_FASTBOOT__BOOT_IMAGE: "glartifact://${CI_TRON__PMB_BUILD_JOB}/${CI_TRON__PMB_EXPORT_PATH}/bootimg"

# Include all the devices that need and can to be tested
{% for device in devices_under_test if device.gitlab_ci_fragment %}
build-{{ device.name }}:
  stage: hardware tests
  extends:
    .ci-tron-build-boot-artifacts
  {%- if device.has_kernel_variants %}
  parallel:
    matrix:
      - KERNEL_VARIANT:
      {%- for kernel in device.kernels %}
        - {{ kernel }}
      {%- endfor %}
  {%- endif %}
  needs: ["build-{{ device.arch }}"]
  variables:
    DEVICE_NAME: {{ device.name }}
    # NOTE: All the packages that may influence testing should have an `install-if postmarketos-mkinitfs-hook-ci`, so no need to add them here
    INSTALL_PACKAGES: {{ device.pkgname }} {{ device.pkgname }}-kernel-${KERNEL_VARIANT} postmarketos-mkinitfs-hook-ci

{{ device.gitlab_ci_fragment }}

test-{{ device.name }}:
  stage: hardware tests
  extends:
    - .ci-tron-initramfs-test
    - .ci-tron-build-artifacts-paths
    - .test-{{ device.name }}
  {%- if device.has_kernel_variants %}
  parallel:
    matrix:
      - KERNEL_VARIANT:
      {%- for kernel in device.kernels %}
        - {{ kernel }}
      {%- endfor %}
  {%- endif %}
  dependencies: []
  needs:
    - job: 'build-{{ device.name }}'
      artifacts: false
      # NOTE: We can't wait for a particular job in the matrix until GitLab implements support for it:
      # https://gitlab.com/gitlab-org/gitlab/-/issues/423553
  variables:
    CI_TRON__PMB_BUILD_JOB: "build-{{ device.name }}{% if device.has_kernel_variants %}: [$KERNEL_VARIANT]{% endif %}"
    CI_TRON_KERNEL_CMDLINE__DEVICEINFO: '{{ device.deviceinfo.kernel_cmdline }}'
{% endfor %}
